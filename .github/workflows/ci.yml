name: CI

on:
  push:
    branches:
      - main
  pull_request: {}

concurrency:
  # Group concurrency on workflow, then:
  # - Is merge run? Group on branch name (`refs/heads/main`)
  # - Is pull request? Group on pull request branch name, for example `feat/add-awesome-feature`
  group: >-
    ${{ github.workflow }}-${{
      github.event_name == 'push'
        && github.ref
        || github.head_ref
    }}
  # Run merge workflows in sequence to prevent parallel deployments and releases
  # Cancel stale pull request runs in progress for the same branch
  cancel-in-progress: ${{ github.event_name != 'push' }}

env:
  NODE_OPTIONS: --max-old-space-size=6144

jobs:
  main:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      # Connect your workspace on nx.app and uncomment this to enable task distribution.
      # The "--stop-agents-after" is optional, but allows idle agents to shut down once the "build" targets have been requested
      # - run: npx nx-cloud start-ci-run --distribute-on="5 linux-medium-js" --stop-agents-after="build"

      - name: Setup
        uses: ./.github/actions/setup
        with:
          git_bot_token: ${{ secrets.GIT_BOT_TOKEN }}

      - uses: nrwl/nx-set-shas@v4

      - run: pnpm exec nx-cloud record -- nx format:check
      - run: pnpm exec nx affected -t lint test build e2e

  deploy-docs:
    name: '[Merge] Deploy docs to GitHub Pages'
    needs: dte_coordinator
    if: github.event_name == 'push' && github.ref_name == 'main'
    runs-on: ubuntu-latest
    permissions:
      contents: read
      actions: read
      pages: write
      id-token: write
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    steps:
      - name: Check out the source code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Setup
        uses: ./.github/actions/setup
      # Uses the cache generated in the distributed step
      - name: Build docs
        run: pnpm exec nx build docs-lumberjack-docs-app
      - name: Set up GitHub Pages
        uses: actions/configure-pages@v4
      - name: Upload docs to GitHub Pages
        uses: actions/upload-pages-artifact@v3
        with:
          path: dist/packages/docs/lumberjack-docs-app/
      - name: Deploy docs to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4

  sonarcloud:
    name: SonarCloud
    needs: dte_coordinator
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: read
      actions: read
    steps:
      - uses: actions/checkout@v4
        with:
          # Necessary for SonarCloud Scan
          fetch-depth: 0
      - name: Setup
        uses: ./.github/actions/setup
      # Uses the cache generated in the distributed step (Needed for the sonar eslint reports).
      - name: Lint with reports
        run: pnpm exec nx run-many --all --target=lint --configuration=report --parallel=2 --max-warnings=0
        # Uses the cache generated in the distributed step (Needed for the sonar jest coverage reports).
      - name: Tests with coverage
        run: pnpm exec nx run-many --all --target=test --configuration=coverage --parallel=1 --max-workers=2

      - name: Configure Sonar report paths
        run: pnpm exec configure-sonar-report-paths

      - name: SonarCloud Scan
        uses: sonarsource/sonarcloud-github-action@v2.1.1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
