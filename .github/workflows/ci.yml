# This workflow will do a clean install of node dependencies, build the source code and run tests across different versions of node
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-nodejs-with-github-actions

name: Node.js CI

env:
  NODE_OPTIONS: --max_old_space_size=4096

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  lint:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [12.x]
        angular-version: [10.1.x]

    steps:
      - uses: actions/checkout@v2
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v2-beta
        with:
          node-version: ${{ matrix.node-version }}

      - name: Get yarn cache directory path
        id: yarn-cache-dir-path
        run: echo "::set-output name=dir::$(yarn cache dir)"
      - uses: actions/cache@v2
        id: yarn-cache
        with:
          path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: ${{ runner.os }}-node-${{ matrix.node-version }}-angular-${{ matrix.angular-version }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-node-${{ matrix.node-version }}-angular-${{ matrix.angular-version }}-yarn-
      - run: yarn install

      - run: yarn lint

  lib:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [12.x]
        angular-version: [8.1.x, 9.0.x, 10.0.x, 10.1.x]

    steps:
      - uses: actions/checkout@v2
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v2-beta
        with:
          node-version: ${{ matrix.node-version }}
      - name: Use Angular version ${{ matrix.angular-version }}
        uses: ngworker/angular-versions-action@v2
        with:
          angular_version: ${{ matrix.angular-version }}

      - name: Get yarn cache directory path
        id: yarn-cache-dir-path
        run: echo "::set-output name=dir::$(yarn cache dir)"
      - uses: actions/cache@v2
        id: yarn-cache
        with:
          path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: ${{ runner.os }}-node-${{ matrix.node-version }}-angular-${{ matrix.angular-version }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-node-${{ matrix.node-version }}-angular-${{ matrix.angular-version }}-yarn-
      - run: yarn install

      - name: Cache library build artifacts
        uses: actions/cache@v2
        id: lib-build-cache
        with:
          path: dist/ngworker/lumberjack
          key: ${{ runner.os }}-node-${{ matrix.node-version }}-angular-${{ matrix.angular-version }}-lumberjack-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-node-${{ matrix.node-version }}-angular-${{ matrix.angular-version }}-lumberjack-
      - name: Build Lumberjack library
        if: steps.lib-build-cache.outputs.cache-hit != 'true'
        run: yarn build:lib

      - run: yarn test:internal:ci
      - run: yarn test:lib:ci

  app:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [10.x, 12.x]
        angular-version: [8.1.x, 9.0.x, 10.0.x, 10.1.x]

    steps:
      - uses: actions/checkout@v2
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v2-beta
        with:
          node-version: ${{ matrix.node-version }}
      - name: Use Angular version ${{ matrix.angular-version }}
        uses: ngworker/angular-versions-action@v2
        with:
          angular_version: ${{ matrix.angular-version }}

      - name: Get yarn cache directory path
        id: yarn-cache-dir-path
        run: echo "::set-output name=dir::$(yarn cache dir)"
      - uses: actions/cache@v2
        id: yarn-cache
        with:
          path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: ${{ runner.os }}-node-${{ matrix.node-version }}-angular-${{ matrix.angular-version }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-node-${{ matrix.node-version }}-angular-${{ matrix.angular-version }}-yarn-
      - run: yarn install

      - name: Use lumberjack library builds
        run: yarn use:dist

      - name: Cache library build artifacts
        uses: actions/cache@v2
        id: lib-build-cache
        with:
          path: dist/ngworker/lumberjack
          key: ${{ runner.os }}-node-${{ matrix.node-version }}-angular-${{ matrix.angular-version }}-lumberjack-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-node-${{ matrix.node-version }}-angular-${{ matrix.angular-version }}-lumberjack-
      - name: Build Lumberjack library
        if: steps.lib-build-cache.outputs.cache-hit != 'true'
        run: yarn build:lib

      - run: yarn build
      - run: yarn test:ci

  e2e:
    runs-on: ubuntu-latest
    needs: lib

    strategy:
      matrix:
        node-version: [12.x]
        angular-version: [9.0.x, 10.0.x, 10.1.x]

    steps:
      - uses: actions/checkout@v2
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v2-beta
        with:
          node-version: ${{ matrix.node-version }}
      - name: Use Angular version ${{ matrix.angular-version }}
        uses: ngworker/angular-versions-action@v2
        with:
          angular_version: ${{ matrix.angular-version }}

      - name: Get yarn cache directory path
        id: yarn-cache-dir-path
        run: echo "::set-output name=dir::$(yarn cache dir)"
      - uses: actions/cache@v2
        id: yarn-cache
        with:
          path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: ${{ runner.os }}-node-${{ matrix.node-version }}-angular-${{ matrix.angular-version }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-node-${{ matrix.node-version }}-angular-${{ matrix.angular-version }}-yarn-
      - run: yarn install

      - run: yarn e2e
