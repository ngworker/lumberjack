name: '@ngworker/lumberjack CI'

env:
  ANGULAR_LATEST: 11.1.x
  NODE_LATEST: 12.x
  NODE_OPTIONS: --max_old_space_size=4096

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  lint:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2
      - name: Use Node.js ${{ env.NODE_LATEST }}
        uses: actions/setup-node@v2
        with:
          node-version: ${{ env.NODE_LATEST }}

      - name: Variable-Yarn cache directory path
        id: yarn-cache-dir-path
        run: echo "::set-output name=dir::$(yarn cache dir)"
      - name: Cache Yarn cache directory
        uses: actions/cache@v2
        with:
          path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: ${{ runner.os }}-node-${{ env.NODE_LATEST }}-angular-${{ env.ANGULAR_LATEST }}-yarn-${{ hashFiles('yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-node-${{ env.NODE_LATEST }}-angular-${{ env.ANGULAR_LATEST }}-yarn-
            ${{ runner.os }}-node-${{ env.NODE_LATEST }}-angular-
      - run: yarn install
      - run: yarn lint

  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2
      - name: Use Node.js ${{ env.NODE_LATEST }}
        uses: actions/setup-node@v2
        with:
          node-version: ${{ env.NODE_LATEST }}

      - name: Variable-Yarn cache directory path
        id: yarn-cache-dir-path
        run: echo "::set-output name=dir::$(yarn cache dir)"
      - name: Cache Yarn cache directory
        uses: actions/cache@v2
        with:
          path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: ${{ runner.os }}-node-${{ env.NODE_LATEST }}-angular-${{ env.ANGULAR_LATEST }}-yarn-${{ hashFiles('yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-node-${{ env.NODE_LATEST }}-angular-${{ env.ANGULAR_LATEST }}-yarn-
            ${{ runner.os }}-node-${{ env.NODE_LATEST }}-angular-
      - run: yarn install
      - run: yarn build:lib
      - uses: actions/upload-artifact@v2
        with:
          name: lumberjack-package
          path: dist/ngworker/lumberjack
          if-no-files-found: error

  lib:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        angular-version: [9.0.x, 9.1.x, 10.0.x, 10.1.x, 10.2.x, 11.0.x, 11.1.x]

    steps:
      - uses: actions/checkout@v2
      - name: Use Node.js ${{ env.NODE_LATEST }}
        uses: actions/setup-node@v2
        with:
          node-version: ${{ env.NODE_LATEST }}
      - name: Use Angular version ${{ matrix.angular-version }}
        uses: ngworker/angular-versions-action@v2
        with:
          angular_version: ${{ matrix.angular-version }}

      - name: Variable-Yarn cache directory path
        id: yarn-cache-dir-path
        run: echo "::set-output name=dir::$(yarn cache dir)"
      - name: Cache Yarn cache directory
        uses: actions/cache@v2
        with:
          path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: ${{ runner.os }}-node-${{ env.NODE_LATEST }}-angular-${{ matrix.angular-version }}-yarn-${{ hashFiles('yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-node-${{ env.NODE_LATEST }}-angular-${{ matrix.angular-version }}-yarn-
            ${{ runner.os }}-node-${{ env.NODE_LATEST }}-angular-
      - run: yarn install
      - run: yarn test:internal:ci
      - run: yarn test:lib:ci

  app:
    runs-on: ubuntu-latest
    needs: build

    strategy:
      matrix:
        node-version: [10.x, 12.x]
        angular-version: [9.0.x, 9.1.x, 10.0.x, 10.1.x, 10.2.x, 11.0.x, 11.1.x]

    steps:
      - uses: actions/checkout@v2
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v2
        with:
          node-version: ${{ matrix.node-version }}
      - name: Use Angular version ${{ matrix.angular-version }}
        uses: ngworker/angular-versions-action@v2
        with:
          angular_version: ${{ matrix.angular-version }}

      - name: Variable-Yarn cache directory path
        id: yarn-cache-dir-path
        run: echo "::set-output name=dir::$(yarn cache dir)"
      - name: Cache Yarn cache directory
        uses: actions/cache@v2
        with:
          path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: ${{ runner.os }}-node-${{ matrix.node-version }}-angular-${{ matrix.angular-version }}-yarn-${{ hashFiles('yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-node-${{ matrix.node-version }}-angular-${{ matrix.angular-version }}-yarn-
            ${{ runner.os }}-node-${{ matrix.node-version }}-angular-
      - run: yarn install
      - run: yarn delete-path-alias @ngworker/lumberjack
      - run: yarn delete-path-alias @ngworker/lumberjack/*-driver
      - uses: actions/download-artifact@v2
        with:
          name: lumberjack-package
          path: node_modules/@ngworker/lumberjack
      - run: npx ngcc || true

      - run: yarn test:ci
      - run: yarn build

  e2e:
    runs-on: ubuntu-latest
    needs: build

    strategy:
      matrix:
        angular-version: [9.0.x, 9.1.x, 10.0.x, 10.1.x, 10.2.x, 11.0.x, 11.1.x]

    steps:
      - uses: actions/checkout@v2
      - name: Use Node.js ${{ env.NODE_LATEST }}
        uses: actions/setup-node@v2
        with:
          node-version: ${{ env.NODE_LATEST }}
      - name: Use Angular version ${{ matrix.angular-version }}
        uses: ngworker/angular-versions-action@v2
        with:
          angular_version: ${{ matrix.angular-version }}

      - name: Variable-Yarn cache directory path
        id: yarn-cache-dir-path
        run: echo "::set-output name=dir::$(yarn cache dir)"
      - name: Cache Yarn cache directory
        uses: actions/cache@v2
        with:
          path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: ${{ runner.os }}-node-${{ env.NODE_LATEST }}-angular-${{ matrix.angular-version }}-yarn-${{ hashFiles('yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-node-${{ env.NODE_LATEST }}-angular-${{ matrix.angular-version }}-yarn-
            ${{ runner.os }}-node-${{ env.NODE_LATEST }}-angular-
      - run: yarn install
      - run: yarn delete-path-alias @ngworker/lumberjack
      - run: yarn delete-path-alias @ngworker/lumberjack/*-driver
      - uses: actions/download-artifact@v2
        with:
          name: lumberjack-package
          path: node_modules/@ngworker/lumberjack
      - run: npx ngcc || true

      - name: Update Chrome
        run: |
          sudo apt-get update
          sudo apt-get --only-upgrade install google-chrome-stable
          google-chrome --version
      - run: yarn e2e

  coverage-base:
    if: github.event_name == 'pull_request'

    runs-on: ubuntu-latest

    steps:
      # consolidate after PR#66 has been merged
      - if: github.ref != 'refs/pull/66/merge'
        uses: actions/checkout@v2
        with:
          ref: ${{ github.event.pull_request.head.ref }}
          fetch-depth: 0
      - if: github.ref != 'refs/pull/66/merge'
        run: git fetch --no-tags --prune --depth=5 origin main
      - if: github.ref == 'refs/pull/66/merge'
        uses: actions/checkout@v2

      - name: Use Node.js ${{ env.NODE_LATEST }}
        uses: actions/setup-node@v2
        with:
          node-version: ${{ env.NODE_LATEST }}

      - name: Variable-Yarn cache directory path
        id: yarn-cache-dir-path
        run: echo "::set-output name=dir::$(yarn cache dir)"
      - name: Cache Yarn cache directory
        uses: actions/cache@v2
        with:
          path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: ${{ runner.os }}-node-${{ env.NODE_LATEST }}-angular-${{ env.ANGULAR_LATEST }}-yarn-${{ hashFiles('yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-node-${{ env.NODE_LATEST }}-angular-${{ env.ANGULAR_LATEST }}-yarn-
            ${{ runner.os }}-node-${{ env.NODE_LATEST }}-angular-
      - run: yarn install
      - run: npx ngcc || true

      - run: yarn test:lib:coverage #--no-fail-on-failing-test-suite
      - name: Rename @ngworker/lumberjack base test coverage report
        run: mv coverage/libs/ngworker/lumberjack/lcov.info coverage/libs/ngworker/lumberjack/lcov-base.info
      - name: Upload @ngworker/lumberjack base test coverage report
        uses: actions/upload-artifact@v2
        with:
          name: lumberjack-base-coverage
          path: coverage/libs/ngworker/lumberjack/lcov-base.info
          if-no-files-found: error

      - run: yarn test:coverage #--no-fail-on-failing-test-suite
      - name: Rename lumberjack-app base test coverage report
        run: mv coverage/apps/lumberjack-app/lcov.info coverage/apps/lumberjack-app/lcov-base.info
      - name: Upload lumberjack-app base test coverage report
        uses: actions/upload-artifact@v2
        with:
          name: lumberjack-app-base-coverage
          path: coverage/apps/lumberjack-app/lcov-base.info
          if-no-files-found: error

  coverage:
    if: github.event_name == 'pull_request'
    needs: coverage-base

    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2
      - name: Use Node.js ${{ env.NODE_LATEST }}
        uses: actions/setup-node@v2
        with:
          node-version: ${{ env.NODE_LATEST }}

      - name: Variable-Yarn cache directory path
        id: yarn-cache-dir-path
        run: echo "::set-output name=dir::$(yarn cache dir)"
      - name: Cache Yarn cache directory
        uses: actions/cache@v2
        with:
          path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: ${{ runner.os }}-node-${{ env.NODE_LATEST }}-angular-${{ env.ANGULAR_LATEST }}-yarn-${{ hashFiles('yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-node-${{ env.NODE_LATEST }}-angular-${{ env.ANGULAR_LATEST }}-yarn-
            ${{ runner.os }}-node-${{ env.NODE_LATEST }}-angular-
      - run: yarn install
      - run: npx ngcc || true

      - run: yarn test:lib:coverage #--no-fail-on-failing-test-suite
      - name: Upload @ngworker/lumberjack coverage report
        uses: actions/upload-artifact@v2
        with:
          name: lumberjack-coverage
          path: |
            coverage/libs/ngworker/lumberjack
            !coverage/**/lcov.info
          if-no-files-found: error
      - uses: actions/download-artifact@v2
        with:
          name: lumberjack-base-coverage
          path: coverage/libs/ngworker/lumberjack

      - run: yarn test:coverage #--no-fail-on-failing-test-suite
      - name: Upload lumberjack-app coverage report
        uses: actions/upload-artifact@v2
        with:
          name: lumberjack-app-coverage
          path: |
            coverage/apps/lumberjack-app
            !coverage/**/lcov.info
          if-no-files-found: error
      - uses: actions/download-artifact@v2
        with:
          name: lumberjack-app-base-coverage
          path: coverage/apps/lumberjack-app

      - run: mv coverage/libs/ngworker/* coverage
      - run: mv coverage/apps/* coverage
      - name: Report test coverage in PR description
        uses: ScaCap/code-coverage-assistant@v0.1
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          monorepo-base-path: coverage
